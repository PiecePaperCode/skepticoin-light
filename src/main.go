package main

import (
	"fmt"
	"github.com/wonderivan/logger"
)

func main() {
	b := []byte{77, 65, 74, 73, 0, 0, 1, 125, 0, 97, 241, 171, 179, 0, 0, 0, 5, 0, 0, 0, 0, 124, 226, 236, 32, 218, 231, 126, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 141, 184, 96, 0, 0, 158, 184, 60, 75, 187, 16, 191, 207, 115, 224, 135, 3, 162, 93, 51, 39, 58, 70, 226, 14, 253, 169, 69, 222, 184, 81, 236, 117, 250, 9, 214, 226, 38, 244, 215, 177, 83, 54, 59, 121, 117, 65, 134, 218, 226, 110, 42, 180, 155, 17, 156, 123, 195, 55, 241, 85, 103, 183, 132, 49, 127, 238, 97, 241, 171, 164, 0, 5, 234, 183, 218, 92, 244, 27, 218, 69, 235, 218, 10, 122, 219, 224, 161, 70, 77, 15, 145, 90, 73, 70, 88, 16, 22, 75, 150, 209, 109, 14, 115, 97, 131, 235, 205, 223, 169, 252, 99, 182, 189, 132, 86, 236, 245, 6, 186, 143, 228, 75, 118, 80, 165, 213, 46, 8, 75, 227, 70, 196, 35, 124, 211, 161, 34, 16, 0, 0, 0, 0, 221, 116, 199, 23, 41, 14, 166, 52, 31, 128, 13, 184, 0, 0, 1, 0, 196, 239, 56, 99, 0, 0, 0, 0, 157, 147, 175, 133, 187, 235, 129, 45, 151, 43, 198, 237, 176, 106, 173, 224, 29, 103, 2, 65, 74, 36, 156, 61, 192, 191, 246, 141, 159, 164, 8, 63, 134, 11, 228, 118, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 92, 96, 0, 1, 0, 0, 0, 0, 59, 154, 202, 0, 2, 239, 210, 63, 214, 11, 176, 221, 10, 18, 94, 13, 111, 111, 117, 59, 26, 67, 12, 227, 60, 113, 140, 85, 105, 206, 163, 128, 3, 90, 99, 217, 239, 206, 203, 216, 117, 202, 252, 240, 32, 195, 41, 64, 237, 121, 240, 156, 183, 180, 83, 120, 225, 56, 55, 124, 14, 199, 182, 151, 90, 191, 96, 171, 52}
	dataBlock := Serialisation.DataBlockMessage(b)
	fmt.Println(dataBlock.Block.Transactions[0].Outputs[0].PublicKey)
	PeerEvent.Hello()
	for {
		receive()
	}
}
func checkError(err error) {
	if err != nil {
		logger.Emer(err)
	}
}
func checkErrorReturn(Return interface{}, err error) {
	// Is used if the return is ignored but the error is not
	if err != nil {
		logger.Emer(err)
	}
}
